name: PR Validation

on:
  pull_request:
    branches:
      - main
    paths: &changed_paths
      - "src"
      - "Cargo*"
      - ".cargo"
      - ".github/workflows/main.yml"
      - "rustfmt.toml"
      - "build.rs"

  push:
    branches:
      - main
    paths: *changed_paths

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@stable
      
      - uses: actions/cache@v4
        with:
          path: &cargo_cache_dirs |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            **/target/
          key: ${{ runner.os }}-cargo-${{ steps.toolchain.outputs.cachekey }}

      - name: Check
        run: cargo check --all-targets -- -D warnings
  
  build-and-test:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@stable
      
      - uses: actions/cache@v4
        with:
          path: *cargo_cache_dirs
          key: ${{ runner.os }}-cargo-${{ steps.toolchain.outputs.cachekey }}

      - name: Build
        run: cargo build

      - name: Test
        run: cargo test

  format:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      
      - uses: actions/cache@v4
        with:
          path: *cargo_cache_dirs
          key: ${{ runner.os }}-cargo-${{ steps.toolchain.outputs.cachekey }}

      - name: Format
        run: cargo +nightly fmt --check --all

  clippy:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      
      - uses: actions/cache@v4
        with:
          path: *cargo_cache_dirs
          key: ${{ runner.os }}-cargo-${{ steps.toolchain.outputs.cachekey }}

      - name: Clippy
        run: cargo clippy --all-targets -- -D warnings
